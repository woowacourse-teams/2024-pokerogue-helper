name: Android PR Builder

on:
  pull_request:
    branches: [ an/develop ]
  push:
    branches: [ an/develop ]

jobs:
  build:
    name: PR Checker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Create Google-Services.json
        env:
          GOOGLE_SERVICES_ALPHA: ${{ secrets.GOOGLE_SERVICES_ALPHA }}
          GOOGLE_SERVICES_BETA: ${{ secrets.GOOGLE_SERVICES_BETA }}
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          touch ./app/src/debug/google-services.json
          touch ./app/src/alpha/google-services.json
          touch ./app/src/beta/google-services.json
          mkdir ./app/src/release
          touch ./app/src/release/google-services.json
          echo $GOOGLE_SERVICES_ALPHA >> ./app/src/debug/google-services.json
          echo $GOOGLE_SERVICES_ALPHA >> ./app/src/alpha/google-services.json
          echo $GOOGLE_SERVICES_BETA >> ./app/src/beta/google-services.json
          echo $GOOGLE_SERVICES >> ./app/src/release/google-services.json
        working-directory: android


      - name: Create Local Properties
        run: touch local.properties
        working-directory: android

      - name: Access Local Properties
        env:
          POKE_BASE_URL: ${{ secrets.POKE_BASE_URL }}
        #          POKE_RELEASE_URL: ${{ secrets.HOST_RELEASE_URI }}
        #          KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
        #          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        #          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        #          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        #          STORE_FILE: ${{ secrets.STORE_FILE }}
        run: |
          echo POKE_BASE_URL=\"${{ secrets.POKE_BASE_URL }}\" >> local.properties
        #          echo STORE_PASSWORD= $STORE_PASSWORD >> local.properties
        #          echo KEY_PASSWORD= $KEY_PASSWORD >> local.properties
        #          echo KEY_ALIAS= $KEY_ALIAS >> local.properties
        #          echo STORE_FILE= $STORE_FILE >> local.properties
        working-directory: android

      #      - name: Create Key Store
      #        env:
      #          KEY_STORE_BASE_64: ${{secrets.KEY_STORE_BASE_64}}
      #        run: |
      #          echo "$KEY_STORE_BASE_64" | base64 -d > ./funch_key_store.jks

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: android

      - name: Lint Check
        run: ./gradlew ktlintCheck
        working-directory: android

      - name: run test
        run: ./gradlew test
        working-directory: android

      - name: Build debug APK
        run: ./gradlew assembleDebug
        working-directory: android

  ui-test:
    name: UI tests on Android (API level ${{ matrix.api-level }})
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [ 30, 31 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Create Google-Services.json
        env:
          GOOGLE_SERVICES_ALPHA: ${{ secrets.GOOGLE_SERVICES_ALPHA }}
          GOOGLE_SERVICES_BETA: ${{ secrets.GOOGLE_SERVICES_BETA }}
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          touch ./app/src/debug/google-services.json
          touch ./app/src/alpha/google-services.json
          touch ./app/src/beta/google-services.json
          mkdir ./app/src/release
          touch ./app/src/release/google-services.json
          echo $GOOGLE_SERVICES_ALPHA >> ./app/src/debug/google-services.json
          echo $GOOGLE_SERVICES_ALPHA >> ./app/src/alpha/google-services.json
          echo $GOOGLE_SERVICES_BETA >> ./app/src/beta/google-services.json
          echo $GOOGLE_SERVICES >> ./app/src/release/google-services.json
        working-directory: android


      - name: Create Local Properties
        run: touch local.properties
        working-directory: android

      - name: Access Local Properties
        env:
          POKE_BASE_URL: ${{ secrets.POKE_BASE_URL }}
        #          POKE_RELEASE_URL: ${{ secrets.HOST_RELEASE_URI }}
        #          KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
        #          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        #          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        #          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        #          STORE_FILE: ${{ secrets.STORE_FILE }}
        run: |
          echo POKE_BASE_URL=\"${{ secrets.POKE_BASE_URL }}\" >> local.properties
        #          echo STORE_PASSWORD= $STORE_PASSWORD >> local.properties
        #          echo KEY_PASSWORD= $KEY_PASSWORD >> local.properties
        #          echo KEY_ALIAS= $KEY_ALIAS >> local.properties
        #          echo STORE_FILE= $STORE_FILE >> local.properties
        working-directory: android

      #      - name: Create Key Store
      #        env:
      #          KEY_STORE_BASE_64: ${{secrets.KEY_STORE_BASE_64}}
      #        run: |
      #          echo "$KEY_STORE_BASE_64" | base64 -d > ./funch_key_store.jks

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: android

#      - name: Setup Android SDK
#        uses: android-actions/setup-android@v3

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run UI test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          disable-animations: true
          arch: x86_64
          script: ./gradlew connectedCheck