name: Backend Production Server CD

on:
  push:
    branches: [ "be/release" ]
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  test:
    uses: ./.github/workflows/Backend-CI.yml
    secrets: inherit


  build:
    needs: test
    runs-on: cd
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          submodules: true

      - name: Copy docker-compose.yml to home directory
        working-directory: ./backend/pokerogue/src/main/resources
        run: sudo cp ./docker-compose-prod.yml /home/ubuntu/docker-compose.yml

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew bootJar
        working-directory: ./backend/pokerogue

      - name: Docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

          docker build -t ${{ secrets.DOCKER_SERVER_IMAGE }} -f ./backend/pokerogue/docker/Dockerfile ./backend/pokerogue
          docker push ${{ secrets.DOCKER_SERVER_IMAGE }}
  
  
  deploy:
    needs: build
    runs-on: cd
    steps:

      - name: Change permission
        run: |
          sudo chown -R ubuntu:ubuntu /home/ubuntu/actions-runner/_work/2024-pokerogue-helper

      - name: Deploy
        run: |
          cd /home/ubuntu
          
          sudo mkdir -p log/nginx && sudo touch log/nginx/error.log && sudo touch log/nginx/access.log
          
          sudo chmod 666 /var/run/docker.sock
          
          if [ "$(docker ps -qa -f name=server)" ]; then
          docker rm -f server
          else
          echo "No container named 'server' to remove."
          fi
          
          docker pull ${{ secrets.DOCKER_SERVER_IMAGE }}
          
          docker-compose -f docker-compose.yml up -d server
          docker image prune -f
